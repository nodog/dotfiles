# switching to Jesse's `
set -g prefix `
unbind-key C-b
bind-key ` send-prefix

# 256 colors for vim
set -g default-terminal "screen-256color"

# set status colors
set-option -g status-style bg=colour99,fg=black
set-option -g pane-border-style bg=colour240,fg=black
set-option -g pane-active-border-style bg=colour99,fg=black

# Highlight active window
#blue set-window-option -g window-status-current-bg colour12
#set-window-option -g window-status-current-bg colour41
set-option -g window-status-current-style bg=colour41

set-option -g status-position top

# Start window numbering at 1 and automatically renumber on window close
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

## Join windows: <prefix> s, <prefix> j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
unbind-key s
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# switching to next for space
unbind " "
bind " " next-window

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Mouse works as expected
set -g mouse on
# Start copy mode when scrolling up
# bind -n WheelUpPane copy-mode
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"


# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set-option -g default-shell /usr/local/bin/zsh

# Use the system clipboard
#set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"


# set history limit for the panes
set-option -g history-limit 9000

# Clear the pane and it's history
bind -n C-k send-keys C-l \; clear-history

# Change the meta-arrows to make bigger jumps
bind-key -r    M-Up resize-pane -U 30
bind-key -r  M-Down resize-pane -D 30
bind-key -r  M-Left resize-pane -L 30
bind-key -r M-Right resize-pane -R 30

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# clear history buffer
bind C-k clear-history

# Send the same command to all panes/windows/sessions
#bind    E command-prompt -p "Command:" \
#          "run \"tmux list-sessions                  -F '##{session_name}'        | xargs -I SESS \
#                 tmux list-windows  -t SESS          -F 'SESS:##{window_index}'   | xargs -I SESS_WIN \
#                 tmux list-panes    -t SESS_WIN      -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
#                 tmux send-keys     -t SESS_WIN_PANE '%1' Enter\""# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
#setw -g mode-keys vi
# Setup 'y' to yank selection as in Vim
#bind-key -t vi-copy y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
#bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind-key p paste-buffer

# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @continuum-restore 'on'
#set -g @continuum-boot-options 'iterm'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'
